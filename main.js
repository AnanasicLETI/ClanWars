const VkBot = require('node-vk-bot-api'); // –û—Å–Ω–æ–≤–∞
const api = require('node-vk-bot-api/lib/api'); // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –≤ –í–ö
const Markup = require('node-vk-bot-api/lib/markup'); // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const token = process.env.TOKEN // –¢–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
const bot = new VkBot(token); // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –≤–∫
const mongoose = require("mongoose"); // –ú–æ–¥—É–ª—å mongoose
const Schema = mongoose.Schema; // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ mongoose
mongoose.connect(process.env.URL, { useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false });

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
const MainKeyBoard = Markup.keyboard([[Markup.button('–î–µ—Ä–µ–≤–Ω—è ‚õ™', 'primary'),],[Markup.button('–õ–∞–≥–µ—Ä—å üé™', 'primary'),Markup.button('–ú–∞–≥–∞–∑–∏–Ω', 'primary'),],]),

// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ö–µ–º
// –°—Ö–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userScheme = new Schema({
    VK_ID: Number, // –í–ö ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ID: Number, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Name: String, // –ò–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Gold: Number, // –ì–æ–ª–¥–∞
    Gems: Number, // –ö—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
    TownHall: Number, // –£—Ä–æ–≤–µ–Ω—å –¥–µ—Ä–µ–≤–Ω–∏
    Repository: Number, // –£—Ä–æ–≤–µ–Ω—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    Guardian: Number, // –°—Ç—Ä–∞–∂–∏
    GuardianHealth: Number, // –•–ø —Å—Ç—Ä–∞–∂–µ–π
    GuardinLevel: Number, // –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–∞–∂–µ–π
    Camp: Number, // –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å
    CampCount: Number, // –ö–æ–ª-–≤–æ –ª—é–¥–µ–π
    Laboratory: Number, // –£—Ä–æ–≤–µ–Ω—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
    Vikings: Number, // –ö–æ–ª-–≤–æ –≤–∏–∫–∏–Ω–≥–æ–≤
    VikingLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –≤–∏–∫–∏–Ω–≥–æ–≤
    Goblins: Number, // –ö–æ–ª-–≤–æ –≥–æ–±–ª–∏–Ω–æ–≤
    GoblinLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –≥–æ–±–ª–∏–Ω–∞
    Gigants: Number, // –ö–æ–ª-–≤–æ –≥–∏–≥–∞–Ω—Ç–æ–≤
    GigantLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –≥–∏–≥–∞–Ω—Ç–æ–≤
    Dragons: Number, // –ö–æ–ª-–≤–æ –¥—Ä–∞–∫–æ–Ω–æ–≤
    DragonLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –¥—Ä–∞–∫–æ–Ω–æ–≤
    Pekka: Number, // –ö–æ–ª-–≤–æ –ø–µ–∫
    PekkaLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –ø–µ–∫–∏
    Cannons: Number, // –ö–æ–ª-–≤–æ –ø—É—à–µ–∫
    CannonsLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –ø—É—à–∫–∏
    Tower: Number, // –ö–æ–ª-–≤–æ –±–∞—à–µ–Ω—å
    TowerLevel: Number, // –£—Ä–æ–≤–µ–Ω—å –±–∞—à–Ω–∏
    KingGoblin: Number, // –ï—Å—Ç—å –ª–∏ –∫–æ—Ä–æ–ª—å –≥–æ–±–ª–∏–Ω–æ–≤
    KingGoblinHealth: Number, // –ö–æ–ª-–≤–æ –µ–≥–æ —Ö–ø
    TheKeeper: Number, // –ï—Å—Ç—å –ª–∏ —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å
    War: Number, // –ù–∞ –∫–æ–≥–æ –Ω–∞–ø–∞–ª–∏
    ADMIN: Number, // –ê–¥–º–∏–Ω –ª–∏?
    VIP: Number, // VIP —Å—Ç–∞—Ç—É—Å
}); 
const User = mongoose.model("users", userScheme); // —Å–∞–º–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function RegisterPlayer(ID)
{
    const data = await api('users.get', {user_ids: ID,access_token: token}); // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å
    let CountPlayers = 0;
    for(const user of await User.find().exec())
    {
        CountPlayers++;
    }
    await User.create({VK_ID: ID, 
        ID: 1000+CountPlayers, 
        Name: data.response[0].first_name, 
        Gold: 100, 
        Gems: 0, 
        TownHall: 1, 
        Repository: 1, 
        Guardian: 5, 
        GuardianHealth: 20, 
        GuardinLevel: 1, 
        Camp: 0, 
        CampCount: 0,  
        Laboratory: 0,
        Vikings: 0, 
        VikingLevel: 1, 
        Goblins: 0, 
        GoblinLevel: 1, 
        Gigants: 0, 
        GigantLevel: 1, 
        Dragons: 0, 
        DragonLevel: 1,
        Pekka: 0, 
        PekkaLevel: 1, 
        Cannons: 1, 
        CannonsLevel: 1,
        Tower: 0,
        TowerLevel: 0, 
        KingGoblin: 0,
        KingGoblinHealth: 0,
        TheKeeper: 0,
        War: 0,
        ADMIN: 0,
        VIP: 0,
        TimeCamping}); // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
}
// –§—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞: –ö–æ–º–∞–Ω–¥–∞ - <–î–µ—Ä–µ–≤–Ω—è>, lower = True
bot.command('–¥–µ—Ä–µ–≤–Ω—è', async (ctx) => {

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±–æ—Ç–∞
    let TrueKeyBoard = null;
    if (ctx.message.from_id == ctx.message.peer_id) TrueKeyBoard = MainKeyBoard;

    if (!await User.findOne({VK_ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    {
        if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä—è–º—É—é –±–æ—Ç—É
            await RegisterPlayer(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else return true;
    }
    const user = await User.findOne({VK_ID: ctx.message.from_id}).exec(); // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    let messageKings = "";
    if(user.KingGoblin)
        messageKings += `üßù –ö–æ—Ä–æ–ª—å –≥–æ–±–ª–∏–Ω–æ–≤: ${user.KingGoblin} —É—Ä–æ–≤–µ–Ω—å.\n- –ó–¥–æ—Ä–æ–≤—å–µ –∫–æ—Ä–æ–ª—è: ${user.KingGoblinHealth}/${user.KingGoblin*50}`;
    if(user.TheKeeper)
        messageKings += `üßô –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–ª–∞—Ç–∞: ${user.TheKeeper} —É—Ä–æ–≤–µ–Ω—å\n- –•—Ä–∞–Ω–∏—Ç–µ–ª—å –∑–ª–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç ${user.TheKeeper*2}% –æ—Ç –≤–æ—Ä–æ–≤–æ–Ω–Ω–æ–≥–æ –∑–ª–∞—Ç–∞`;
    await ctx.reply(` ‚õ™ ${user.Name}, –≤–∞—à–∞ –¥–µ—Ä–µ–≤–Ω—è:\n\n\
    üìå –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π ID: ${user.ID}\n\
    üïç –ì–ª–∞–≤–Ω–æ–µ –∑–¥–∞–Ω–∏–µ: ${user.TownHall} —É—Ä–æ–≤–µ–Ω—å.\n\
    üí∞ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: ${user.Gold} –∑–æ–ª–æ—Ç–∞.\n\
    - –£—Ä–æ–≤–µ–Ω—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ ${user.Repository}\n\n\
    üíÇ –°—Ç—Ä–∞–∂–µ–π –¥–µ—Ä–µ–≤–Ω–∏: ${user.Guardian} –ª—é–¥–µ–π.\n\
    ‚ô• –ó–¥–æ—Ä–æ–≤—å–µ —Å—Ç—Ä–∞–∂–µ–π: ${user.GuardianHealth}/${user.TownHall*20} HP\n\
    üõ° –ü—É—à–∫–∏: ${user.Cannons}/${user.TownHall*2} | –£—Ä–æ–≤–µ–Ω—å: ${user.CannonsLevel}
    üèπ –ë–∞—à–Ω—è —Å –ª—É—á–Ω–∏–∫–∞–º–∏: ${user.Tower}/${user.TownHall*3} | –£—Ä–æ–≤–µ–Ω—å: ${user.TowerLevel}\n\
    ${messageKings}`, null, TrueKeyBoard);
});
// –§—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞: –ö–æ–º–∞–Ω–¥–∞ - <–õ–∞–≥–µ—Ä—å>, lower = True
bot.command('–ª–∞–≥–µ—Ä—å', async (ctx) => {

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±–æ—Ç–∞
    let TrueKeyBoard = null;
    if (ctx.message.from_id == ctx.message.peer_id) TrueKeyBoard = MainKeyBoard;

    if (!await User.findOne({VK_ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    {
        if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä—è–º—É—é –±–æ—Ç—É
            await RegisterPlayer(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else return true;
    }
    const user = await User.findOne({VK_ID: ctx.message.from_id}).exec(); // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    let messageCamp = "‚öî –ë–æ–π—Ü—ã:\n";
    if(Vikings + Goblins + Dragons + Pekka == 0)
        messageCamp = "–í —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–º –ª–∞–≥–µ—Ä–µ –ø—É—Å—Ç–æ..\n–î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤–∞—à–∏—Ö –±–æ–π—Ü–æ–≤: –¢—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å <–∫–æ–≥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å> <–∫–æ–ª-–≤–æ>";
    
    if(Vikings > 0)
        messageCamp += `ü¶∏‚Äç‚ôÇÔ∏è –í–∏–∫–∏–Ω–≥–∏: ${user.Vikings} [${user.VikingLevel}]\n`;

    if(Goblins > 0)
        messageCamp += `üßü‚Äç‚ôÇÔ∏è –ì–æ–±–ª–∏–Ω–æ–≤: ${user.Goblins} [${user.GoblinLevel}]\n`;

    if(Gigants > 0)
        messageCamp += `üëπ –ì–∏–≥–∞–Ω—Ç–æ–≤: ${user.Gigants} [${user.GigantLevel}]\n`;

    if(Dragons > 0)
        messageCamp += `üëø –î—Ä–∞–∫–æ–Ω–æ–≤: ${user.Dragons} [${user.DragonLevel}]\n`;

    if(Pekka > 0)
        messageCamp += `ü§ñ –ü–µ–∫–∫: ${user.Pekka} [${user.PekkaLevel}]\n`;
    await ctx.reply(` üé™ ${user.Name}, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å:\n\n\
    ‚õ∫ –í–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${user.CampCount}/${user.Camp*15} | –£—Ä–æ–≤–µ–Ω—å ${user.Camp}\n\n${messageCamp}`, null, TrueKeyBoard);
});
// –§—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞: –ö–æ–º–∞–Ω–¥–∞ - <–¢—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å>, lower = True
bot.command('—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å', async (ctx) => {

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±–æ—Ç–∞
    let TrueKeyBoard = null;
    if (ctx.message.from_id == ctx.message.peer_id) TrueKeyBoard = MainKeyBoard;

    if (!await User.findOne({VK_ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    {
        if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä—è–º—É—é –±–æ—Ç—É
            await RegisterPlayer(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else return true;
    }
    const user = await User.findOne({VK_ID: ctx.message.from_id}).exec(); // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø–∏—Å—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    const args = ctx.message.text.split(' ');
    if(!args[1] || !args[2])
        return await ctx.reply(` üèπ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –¢—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ–π—Ü–∞> <–∫–æ–ª-–≤–æ>\n\
                                –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±–æ–π—Ü–æ–≤ —Ç—Ä–µ–±—É–µ—Ç —Ç—Ä–∞—Ç –∑–ª–∞—Ç–∞!\n\n\
                                ü¶∏‚Äç‚ôÇÔ∏è –í–∏–∫–∏–Ω–≥ = ${user.VikingLevel*2} –∑–ª–∞—Ç–∞\n\
                                üßü‚Äç‚ôÇÔ∏è –ì–æ–±–ª–∏–Ω = ${user.GoblinLevel*4} –∑–ª–∞—Ç–∞\n\
                                üëπ –ì–∏–≥–∞–Ω—Ç = ${user.GigantLevel*6} –∑–ª–∞—Ç–∞\n\
                                üëø –î—Ä–∞–∫–æ–Ω = ${user.DragonLevel*8} –∑–ª–∞—Ç–∞\n\
                                ü§ñ –ü–µ–∫–∫–∞ = ${user.PekkaLevel*10} –∑–ª–∞—Ç–∞\n`, null, TrueKeyBoard);
    const ammount = parseInt(args[2]);
    if(ammount + user.CampCount > user.Camp*15)
        return await ctx.reply(' üèπ –î–ª—è —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–π—Ü–æ–≤ –Ω–µ—Ç –º–µ—Å—Ç–∞!', null, TrueKeyBoard);

    if(args[1].toLowerCase() == '–≤–∏–∫–∏–Ω–≥')
    {
        if(user.Gold < user.VikingLevel*2*ammount)
            return await ctx.reply(' üèπ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', null, TrueKeyBoard);

        await User.findOneAndUpdate({VK_ID: ctx.message.from_id},{ Gold: user.Gold - user.VikingLevel*2*ammount, Vikings: user.Vikings + ammount, CampCount: user.CampCount + ammount }).exec();
        return await ctx.reply(` ü¶∏‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤–∏–∫–∏–Ω–≥–æ–≤ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í—ã–ø—É—â–µ–Ω–æ –±–æ–π—Ü–æ–≤ ${ammount}.`, null, TrueKeyBoard);
    }
    else if(args[1].toLowerCase() == '–≥–æ–±–ª–∏–Ω')
    {
        if(user.Camp < 2)
            return await ctx.reply(' üèπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω..\n–ì–æ–±–ª–∏–Ω–æ–≤ –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ 2 —É—Ä–æ–≤–Ω—è –ª–∞–≥–µ—Ä—è', null, TrueKeyBoard);
        
        if(user.Gold < user.GoblinLevel*4*ammount)
            return await ctx.reply(' üèπ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', null, TrueKeyBoard);

        await User.findOneAndUpdate({VK_ID: ctx.message.from_id},{ Gold: user.Gold - user.GoblinLevel*4*ammount, Goblins: user.Goblins + ammount, CampCount: user.CampCount + ammount }).exec();
        return await ctx.reply(` üßü‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≥–æ–±–ª–∏–Ω–æ–≤ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í—ã–ø—É—â–µ–Ω–æ –±–æ–π—Ü–æ–≤ ${ammount}.`, null, TrueKeyBoard);
    }
    else if(args[1].toLowerCase() == '–≥–∏–≥–∞–Ω—Ç')
    {
        if(user.Camp < 3)
            return await ctx.reply(' üèπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω..\n–ì–∏–≥–∞–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ 3 —É—Ä–æ–≤–Ω—è –ª–∞–≥–µ—Ä—è', null, TrueKeyBoard);
        
        if(user.Gold < user.GigantLevel*6*ammount)
            return await ctx.reply(' üèπ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', null, TrueKeyBoard);

        await User.findOneAndUpdate({VK_ID: ctx.message.from_id},{ Gold: user.Gold - user.GigantLevel*6*ammount, Gigants: user.Gigants + ammount, CampCount: user.CampCount + ammount }).exec();
        return await ctx.reply(` üëπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≥–∏–≥–∞–Ω—Ç–æ–≤ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í—ã–ø—É—â–µ–Ω–æ –±–æ–π—Ü–æ–≤ ${ammount}.`, null, TrueKeyBoard);
    }
    else if(args[1].toLowerCase() == '–¥—Ä–∞–∫–æ–Ω')
    {
        if(user.Camp < 4)
            return await ctx.reply(' üèπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω..\n–î—Ä–∞–∫–æ–Ω–æ–≤ –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ 4 —É—Ä–æ–≤–Ω—è –ª–∞–≥–µ—Ä—è', null, TrueKeyBoard);
        
        if(user.Gold < user.DragonLevel*8*ammount)
            return await ctx.reply(' üèπ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', null, TrueKeyBoard);

        await User.findOneAndUpdate({VK_ID: ctx.message.from_id},{ Gold: user.Gold - user.DragonLevel*8*ammount, Dragons: user.Dragons + ammount, CampCount: user.CampCount + ammount }).exec();
        return await ctx.reply(` üëø –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥—Ä–∞–∫–æ–Ω–æ–≤ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í—ã–ø—É—â–µ–Ω–æ –±–æ–π—Ü–æ–≤ ${ammount}.`, null, TrueKeyBoard);
    }
    else if(args[1].toLowerCase() == '–ø–µ–∫–∫–∞')
    {
        if(user.Camp < 5)
            return await ctx.reply(' üèπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–ª—É—á—à–µ–Ω..\n–ü–µ–∫–∫—É –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ 5 —É—Ä–æ–≤–Ω—è –ª–∞–≥–µ—Ä—è', null, TrueKeyBoard);
        
        if(user.Gold < user.PekkaLevel*10*ammount)
            return await ctx.reply(' üèπ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', null, TrueKeyBoard);

        await User.findOneAndUpdate({VK_ID: ctx.message.from_id},{ Gold: user.Gold - user.PekkaLevel*10*ammount, Pekka: user.Pekka + ammount, CampCount: user.CampCount + ammount }).exec();
        return await ctx.reply(` ü§ñ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–µ–∫–∫ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!\n–í—ã–ø—É—â–µ–Ω–æ –±–æ–π—Ü–æ–≤ ${ammount}.`, null, TrueKeyBoard);
    }
    else return await ctx.reply(' üèπ –¢–∞–∫–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', null, TrueKeyBoard);
});
// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.event('message_new', async (ctx) => {
    if (!await User.findOne({VK_ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        if(ctx.message.from_id == ctx.message.peer_id)
            await RegisterPlayer(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
});
// –§—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞: –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.startPolling(); 
